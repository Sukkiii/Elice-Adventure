{
  "name": "package-json-example",
  "version": "0.1.0",
  // 시멘틱 버전 > major.minor.patch
  "description": "a Node.js application",
  "author": "Someone",
  // package를 npm Registry에 업로드하고 다운 받았을 때 해당 패키지를 직접 "실행"시키면 실제로 실행 파일
  "main": "bin/cli.js",
  // npm run <작업명>으로 실행시킬 수 있는 작업들
  // 참고로 start의 경우 run없이 npm start로 실행시킬 수 있다
  "scripts": {
    "start": "node index.js"
  },
  // package를 대표하는 키워드 묶음
  "keywords": [
    "prettier",
    "eslint",
    "semantic-release",
    "husky"
  ],
  // 현재 package가 의존하고 있는 외부 package들
  // <package명>: <버전> 형식으로 되어있다
  "dependencies": {
    "chalk": "^4.1.2",
    "edit-json-file": "^1.6.0",
    "gitignore": "^0.7.0",
    "ncp": "^2.0.0",
    "ora": "^5.4.1"
  },
  // 현재 package가 소스 코드 내에서 의존하진 않지만 외부적(코드 포맷, 코드 문법 교정, TypeScript 파일을 컴파일 없이 바로 실행하기)으로 의존하고 있는 package들
  // 주로 개발할 때 도구로써 사용하는 package들이 많으며 TypeScript의 경우 타입들을 이 섹션에 두는 것이 좋다
  // npm i -D <package-이름> 또는 npm install --save-dev <package-이름> 형식으로 해야 devDependencies로 등록된다
  "devDependencies": {
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/npm": "^7.1.3",
    "conventional-changelog-conventionalcommits": "^4.6.0",
    "eslint": "^7.8.1",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "husky": "^6.0.0",
    "lint-staged": "^10.5.3",
    "prettier": "^2.1.1",
    "semantic-release": "^17.4.2"
  },
  // 현재 package를 실행시킬 수 있는 Node.js 버전 범위
  "engines": {
    "node": ">=14.16.1"
  },
  // 이하 devDependencies로 등록된 도구들을 위한 설정값들
  // eslint라는 코드 문법 교정을 위한 도구의 설정 값
  "eslintConfig": {
    "parserOptions": {
      "ecmaVersion": 2019
    },
    "plugins": [
      "prettier"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:prettier/recommended"
    ],
    "env": {
      "node": true,
      "jest": true
    }
  },
  // lint-staged라는 git hook기반으로 local CI 스크립트를 돌리기 쉽게 해주는 도구를 위한 설정값들
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
      "prettier --write"
    ]
  },
  // semantic-release라는 semVer방식의 프로젝트 버전 넘버링을 자동으로 처리해주는 도구를 위한 설정값들
  "release": {
    "branches": "main",
    "repositoryUrl": "https://github.com/eaxmple/examplegit",
    "debug": "true",
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "angular",
          "releaseRules": [
            {
              "type": "docs",
              "release": "patch"
            },
            {
              "type": "test",
              "release": "patch"
            },
            {
              "type": "ci",
              "release": "patch"
            },
            {
              "type": "refactor",
              "release": "patch"
            },
            {
              "scope": "no-release",
              "release": false
            }
          ]
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits",
          "presetConfig": {
            "types": [
              {
                "type": "feat",
                "section": "Features"
              },
              {
                "type": "fix",
                "section": "Bug Fixes"
              },
              {
                "type": "perf",
                "section": "Performance Improvements"
              },
              {
                "type": "revert",
                "section": "Reverts"
              },
              {
                "type": "docs",
                "section": "Documentation"
              },
              {
                "type": "chore",
                "section": "Miscellaneous Chores"
              },
              {
                "type": "refactor",
                "section": "Code Refactoring",
                "hidden": true
              },
              {
                "type": "test",
                "section": "Tests",
                "hidden": true
              },
              {
                "type": "build",
                "section": "Build System",
                "hidden": true
              },
              {
                "type": "ci",
                "section": "Continuous Integration"
              }
            ]
          }
        }
      ],
      "@semantic-release/github",
      [
        "@semantic-release/changelog",
        {
          "changelogFile": "CHANGELOG.md"
        }
      ],
      [
        "@semantic-release/git",
        {
          "assets": [
            "package.json",
            "package-lock.json",
            "CHANGELOG.md"
          ],
          "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        }
      ],
      "@semantic-release/npm"
    ]
  }
}
